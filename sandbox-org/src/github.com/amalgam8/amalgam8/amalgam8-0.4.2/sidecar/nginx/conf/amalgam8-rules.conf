###############DO NOT MODIFY###############
# These directives are used by A8 during request routing.
set_by_lua_block $a8_source_service { return amalgam8:get_myname() }
set_by_lua_block $a8_source_tags { return amalgam8:get_mytags() }
set_by_lua_block $local_ip_address { return amalgam8:get_myip() }
set $a8_upstream_name nil;
set $a8_upstream_tags nil;
set $a8_upstream_instance nil;
set $a8_trace_key nil;
set $a8_trace_value nil;
set $a8_service_type 'http';
set $a8_upstream_host $host;

access_by_lua_block {
   amalgam8:apply_rules()
}

#########END of DO NOT MODIFY##############
proxy_set_header Host $a8_upstream_host;

# Proxy to the appropriate upstreams using proxy_pass.
# To invoke APIs of other microservices, the application has to call the sidecar at
# http://localhost:6379/serviceName/apiEndpoint
#
# For more information, see:
# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
proxy_pass $a8_service_type://a8_upstreams$reqpath$is_args$args;

# By default, the service name is stripped from the URL before making the upstream call. To retain the
# service name in the URL, use the following proxy_pass directive instead of the above:
#
# proxy_pass $a8_service_type://a8_upstreams;

## websocket auto-upgrade
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $connection_upgrade;

## For retries.. Nginx will retry upstream API calls whenever there is an error.
## It will attempt a retry only when there is a connection failure, connect timeout,
## invalid headers received on the connection.
###This is the default in nginx. Its shown here for informational purposes.
#proxy_next_upstream error timeout invalid_header;

## When an upstream API fails, the maximum number of times an API call can be retried on other
## backends. When the user does not set a retry maximum via the rules, there will be a maximum
## of 10 retries per request.
proxy_next_upstream_tries 10;
